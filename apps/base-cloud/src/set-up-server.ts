import Fastify from 'fastify';
import * as dotenv from 'dotenv';
// import { PrismaClient } from "@prisma/client";
import { PrismaClient } from '@deur/cloud-prisma-db';
import autoload from '@fastify/autoload';
import path from 'path';
import cors from '@fastify/cors';
import type { FastifySwaggerOptions } from '@fastify/swagger';
import type { FastifyRedis } from '@fastify/redis';
import { writeFileSync } from 'node:fs';

const PORT = 3030;

dotenv.config();

const prisma = new PrismaClient();

const fastify = Fastify({
  logger: true,
});

fastify.register(cors, {
  credentials: true,
  origin: '*',
});

fastify.register(require('@fastify/redis'), { host: 'redis', port: 6379 });

fastify.register(require('@fastify/swagger'), {
  swagger: {
    info: {
      title: 'Test swagger',
      description: 'testing the fastify swagger api',
      version: '0.1.0',
    },
  },
});
fastify.register(require('@fastify/swagger-ui'), {
  routePrefix: '/swagger',

  uiConfig: {
    docExpansion: 'full',
    deepLinking: false,
  },
  uiHooks: {},
  staticCSP: true,
  transformSpecificationClone: true,
});

fastify.register(autoload, {
  dir: path.join(__dirname, './routes'),
  options: { prefix: 'v1' },
});

const start = async () => {
  try {
    await fastify.ready();
    await fastify.listen({ port: PORT, host: '0.0.0.0' });
    // fastify.ready(() => {
    //   writeFileSync(
    //     './docs/autogenerated-swagger.json',
    //     JSON.stringify(fastify.swagger(), null, 1)
    //   );
    // });
  } catch (err) {
    fastify.log.error(err);
    process.exit(1);
  }
};

export { prisma, start };
